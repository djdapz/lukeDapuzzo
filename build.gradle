group = 'com.dapuzzo.luke'
version = "$version"

description = """Luke D'Apuzzo's website"""

buildscript {
    ext.kotlin_version = '1.3.31'
    ext.spring_boot_version = '2.0.1.RELEASE'

    repositories {
        mavenCentral()
        maven { //noinspection GroovyAssignabilityCheck
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
    }
}


apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: "kotlin-spring"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-noarg"
apply plugin: 'org.springframework.boot'


sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


repositories {
    mavenCentral()
}

archivesBaseName = "luke-dapuzzo"

dependencies {
    compile(
            "com.fasterxml.jackson.core:jackson-core:2.9.2",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.2",
            'commons-validator:commons-validator:1.4.0',
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version",
            "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
            "org.flywaydb:flyway-core:4.1.0",
            'org.postgresql:postgresql:9.4.1212.jre7',
            "org.springframework.boot:spring-boot-starter-jdbc:$spring_boot_version",
            "org.springframework.boot:spring-boot-starter-actuator:$spring_boot_version",
            "org.springframework.boot:spring-boot-starter-web:$spring_boot_version",
            "org.springframework.boot:spring-boot-starter-security:$spring_boot_version",
            "org.springframework.boot:spring-boot-starter-webflux:$spring_boot_version",
            "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0",
            'io.jsonwebtoken:jjwt:0.9.1'

    )Psr

    testCompile(
            "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0",
            "io.rest-assured:rest-assured:3.0.5",
            "org.jetbrains.kotlin:kotlin-test",
            "org.junit.jupiter:junit-jupiter-engine:5.1.0",
            "com.github.javafaker:javafaker:0.14",
            'com.jayway.jsonpath:json-path-assert:2.4.0',
            "com.github.tomakehurst:wiremock-jre8:2.23.2"

    )
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "$spring_boot_version") {
        exclude(module: 'commons-logging')
    }
}

bootRun {
    //noinspection GroovyAssignabilityCheck
    systemProperties System.properties
}

test {
    testLogging {
        // set options for log level LIFECYCLE
        events "started", "skipped", "failed"
        exceptionFormat "short"
        showCauses true

        // remove standard output/error logging from --info builds
        // by assigning only 'failed' and 'skipped' events
        info.events = ["failed", "skipped"]
    }
}
